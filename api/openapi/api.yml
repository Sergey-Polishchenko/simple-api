openapi: 3.0.3
info:
  title: User API
  description: API for managing users.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /users:
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserJson'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserJson'
        '400':
          description: Invalid request
    get:
      summary: Get all users
      operationId: getUsers
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserJson'
  /users/{id}:
    get:
      summary: Get a user by ID
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserJson'
        '404':
          description: User not found
    put:
      summary: Update an existing user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserJson'
      responses:
        '200':
          description: User updated successfully
        '400':
          description: Invalid request
        '404':
          description: User not found
    delete:
      summary: Delete a user by ID
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found
components:
  schemas:
    CreateUserJson:
      type: object
      properties:
        name:
          type: string
          description: User's name
      required:
        - name
    UpdateUserJson:
      type: object
      properties:
        name:
          type: string
          description: Updated user name
      required:
        - name
    UserJson:
      type: object
      properties:
        id:
          type: string
          description: User ID
        name:
          type: string
          description: User name
